<!DOCTYPE BOOK PUBLIC "-//Davenport//DTD DocBook V3.0//EN" [
<!ENTITY GNOME-APPS SYSTEM "gnome-terminal.sgml">] >


<Book id="index">
  <title>GNOME Terminal User's Guide</title>
  <bookinfo>
    <authorgroup>
      <author>
	<firstname>Miguel</firstname>
	<surname>de Icaza</surname>
      </author>
      <author>
	<firstname>Michael</firstname>
	<surname>Zucchi</surname>
      </author>
    </authorgroup>
    <releaseinfo>documentation in progress</releaseinfo>
     <legalnotice>
      <para>
	This document can be freely redistributed according to the
	terms of the GNU General Public License.</para>
    </legalnotice>
  </bookinfo>
  <toc></toc>
  
  <chapter id="terminal">
    <title>The GNOME terminal users guide.</title>
    
    <sect1 id="Description">
      <title>Description</title>
      <para>
	gnome-terminal is a terminal emulator program that is part of the
	GNOME project.  It provides access to the Unix shell on the GNOME
	environment. </para>

      <para>
	gnome-terminal supports colour display (see the section on
	<link linkend="environment">environment</link> variables for details) and provides mouse support
	to applications that are aware of mouse events for xterm-like
	terminals. </para>
    </sect1>	
    
    <sect1 id="Emulation">
      <title>Emulation</title>

      <para>The GNOME terminal program (gnome-terminal) is designed
      to emulate the 'xterm' program provided by the X Consortium.
      The 'xterm' program in turn is an almost-complete emulation of 
      the DEC VT102 terminal.</para>
      
      <para>The GNOME terminal program supports the same extensions to 
      the VT102 that the xterm program provides, through special escape 
      sequences. The xterm program is an evolving program. Recent changes 
      to xterm have been been incorporated into gnome-terminal. This 
      includes emulation of the newer DEC VT220 escape sequences.
      </para>

    </sect1>

    <sect1 id="config">
      <title>Configurable options</title>
      <para>
	Configurable options are configurable via the preferences dialogue,
	which can be invoked from the <link
	linkend="menu-settings">preferences menu item</link>, found under
	"Settings" in the gnome-terminal menubar.
      </para>

      <sect2 id="config-general">
	<title>General options</title>
	<para>
	  Whilst most options are self-explanatory, some are discussed below
	  in more detail.
	</para>
	<variablelist>
	  <varlistentry>
	    <term>Terminal Class</term>
	    <listitem>
	      <para>Sets the terminal class for the current
	      configuration or terminal.  Refer to the section on
	      <link linkend="classes">classes</link> for further
	      information.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Select-by-word characters</term>
	    <listitem>
	      <para>Defines a list of characters (or
		<emphasis>character classes</emphasis>) that should be
		considered 'word characters'.  These are used when
		<link linkend="pointer-select">selecting text</link>
		by word.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>

      <sect2 id="config-colour">
	<title>Colour configuration</title>
	<para>
	  Gnome terminal fully supports the colour extensions used by
	  xterm.  These options allow you to control those colours.
	</para>
	<variablelist>
	  <varlistentry>
	    <term>Colour palette</term>
	    <listitem>
	      <para>gnome-terminal supports four colour schemes: the Linux
		console scheme, the colour Xterm scheme, the rxvt colour
		scheme, and a completely customisable colour scheme.
		These define the intensity and colours for the
		sixteen ANSI colour combinations that are supported by these
		terminals.</para>
	      <para>
		If you have selected the custom option, then all 16
		colours (nominally 8 colours, and 8 bright colours)
		can be customised by clicking on the colour selectors.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Primary colour combination</term>
	    <listitem>
	      <para>When no colours have been requested by the
		application running inside of gnome-terminal,
		gnome-terminal allows you to over-ride the default
		terminal foreground and background
		colours.</para>
	      
	      <para>The following options are available: white on black, black
		on white, green on black, black on light yellow, and
		custom.  How these actually appear depends on the
		palette selected (for the white on black and black on
		white options).
		Custom allows you to select the default foreground and
		background colours individually and separate to the palette.</para>

	      <para>Additionally, the user can drag a colour from the
		rectangular box beneath the colour wheel from any GNOME
		colour selector or colour source and drop it into the
		terminal.  If the user drops the colour on a blank space, it
		will set the background, if the user drops the colour on a
		cell that contains a character, it will change the
		foreground.  This will also automatically change to
		custom colours, and set the custom foreground or
		background colour.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>

    </sect1>
    
    <sect1 id="classes">
      <title>Terminal classes</title>
      <para>The GNOME terminal allows you to have different configuration
	profiles to suit different uses (different background colours, 
        presence, absence or position of scrollbars, and so on).  To set
        these up, you invoke the preferences dialogue box from the settings
        menu of gnome-terminal. Select the options you prefer (these changes
        will be made to your currently-open terminal, so you can see what
        they look like), and before closing the preferences box, make sure 
        you have put a new name in the space marked "Terminal Class". 
       </para>
      
      <para>To activate a specific class at program startup you can use
	the --tclass command line option
      </para>
    </sect1>
    
    <sect1 id="Options">
      <title>Command line options</title>
      <para>
	<itemizedlist>
	  <listitem>
	    <para><symbol>--background COLOUR</symbol></para>
	    
	    <para>Used to specify the 
	      background colour for the terminal at startup.  The COLOUR can be
	      any form accepted by your windowing system.
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para><symbol>--tclass CLASSNAME</symbol></para>
	    <para>
	      Specifies the terminal class used to configure the
	      terminal at startup.
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para><symbol>--command CMD, -e CMD</symbol></para>
	    <para>
	      Runs the CMD command at startup time.
	    </para>
	  </listitem>

	  <listitem>
	    <para><symbol>--execute CMD ARGS, -x CMD ARGS</symbol></para>
	    <para>
	      Executes the command CMD with its arguments ARGS on
	      startup.  No arguments beyond this one will be processed
	      by the terminal.  This behaviour mimics the xterm -e
	      behaviour.
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para><symbol>--font FONT</symbol></para>
	    <para>
	      Sets the font of the terminal to FONT
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para><symbol>--foreground COLOUR</symbol></para>
	    <para>
	      Sets the foreground of the terminal to COLOUR.
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para><symbol>--geometry GEOMETRY</symbol></para>
	    <para>
	      Specifies the startup geometry for this terminal.   The
	      geometry specifies the desired width and height in
	      terminal characters.  For example: --geometry=80x40 will
	      create an eighty-column by forty-line terminal.</para>
	      <para>FIXME:  LInk to gnome-libs document on GEOMETRY specifications
	      when it is written
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para><symbol>--login</symbol></para>
	    <para>
	      Make gnome-terminal launch the shell in login mode (it will run
	      all of your login initialization scripts in this mode). 
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para><symbol>--nologin</symbol></para>
	    <para>
	      Make gnome-terminal only launch a shell, without running any
              login initialization scripts.
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para><symbol>--noutmp</symbol></para>
	    <para>
	      Indicates that this and the associated shell should not be
	      registered in the system database of users logged into the
	      computer. 
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para><symbol>--utmp</symbol></para>
	    <para>
	      Indicates that the user wants this terminal to be
	      registered in the system database of users logged into
	      the computer (the utmp database).  This is the default.
	    </para>
	  </listitem>

	  <listitem>
	    <para><symbol>--lastlog</symbol></para>
	    <para>
	      Always create a lastlog entry for each terminal login.
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para><symbol>--lastlog</symbol></para>
	    <para>
	      Do not create a lastlog entry for each terminal login.
	    </para>
	  </listitem>
	  	  
	  <listitem>
	    <para><symbol>--title TITLE, -t TITLE</symbol></para>
	    <para>
	      Makes GNOME terminal use TITLE for the window caption.
	    </para>
	  </listitem>

	  <listitem>
	    <para><symbol>--termname TERMNAME</symbol></para>
	    <para>
	      Makes GNOME terminal use TERMNAME as the value of the
	      TERM environment variable.
	    </para>
	  </listitem>

	  <listitem>
	    <para><symbol>--start-factory-server</symbol></para>
	    <para>
	      Try to start the TerminalFactory service for this terminal.
	    </para>
	  </listitem>

	  <listitem>
	    <para><symbol>--use-factory</symbol></para>
	    <para>
	      Try to create a terminal window from the TerminalFactory
	      service.
	    </para>
	  </listitem>
	</itemizedlist>		
      </para>
      <para>You can use more than one option at once: for example, on
            a machine with the text-based web browser Lynx installed,
            'gnome-terminal --title Web --command lynx' will open a
            gnome-terminal which starts up Lynx and has a titlebar 
            which says "Web". 
      </para>

    </sect1>
    
    <sect1 id="pointerusage">
      <title>Pointer usage</title>
      <para>
	The pointer can be used to select (copy), and extend-select
	text, paste text from other terminals or applications, and
	bring up a menu.
      </para>
      <sect2 id="pointer-select">
	<title>Selection</title>
        <para>
          The following assumes a standard three-button mouse that
          has not been made left-handed via the control center. Left-handed 
          mice will of course work, but with the right button instead of
          the left one, and so on.
        </para>
	<para>
	  The left mouse button can be used to initiate a selection.
	  If the mouse button is clicked once, and dragged, then
	  characters are selected individually.  If you drag past the
	  vertical boundaries of the window it will scroll to keep
	  up.
	</para>
	<para>
	  If the left mouse button is double-clicked then the selection
	  will be by word-characters.  Hold the mouse button down on
	  the second click to drag the mouse and enlarge the
	  selection.  The word-characters are defined
	  in the <link linkend="config-general">preferences
	  dialogue</link> under the word class option.
	</para>
	<para>
	  Finally, if the left mouse button is triple-clicked and
	  held, whole lines are selected as you drag the mouse up and
	  down.
	</para>
	<para>
	  The middle mouse button can be used to extend the
	  selection.  Simply scroll to where you wish to extend the
	  selection to, and click the right mouse button whilst the
          mouse is still in the scrollbar.  Again, single, double and 
          triple click-drags will result in by-character, by-word, or 
          by-line selection.
	</para>
	<para>
	  For all cases, releasing the mouse button automatically
	  copies the selected text into the clipboard, and may be
	  pasted to other applications.  Note that any screen output
	  will reset the rendered selection, but this does not lose
	  the clipboard contents.
	</para>
      <sect2 id="pointer-paste">
	<title>Pasting text</title>
	<para>
	  If the middle mouse button is pressed, then the current
	  selection is pasted into the window.  This can be used to
	  transfer text from other applications.
	</para>
	<para>
	  If you only have a two-button mouse, then your X server
	  probably has a method of emulating the middle mouse button.
	  Refer to your X server documentation for further
	  information.
	</para>
      <sect2 id="pointer-wheel">
	<title>Mouse Wheels</title>
	<para>
	  If you have a wheel'd mouse (which sends mouse button 4 and
	  mouse button 5 events), then you can use the wheel to scroll
	  up and down through the scrollback buffer.
	</para>
      <sect2 id="pointer-menu">
	<title>Control Menu</title>
	<para>
	  The pointer can also be used to bring up a <link linkend="menu-popup">control-menu</link>,
	  which can be used to reset the terminal, or bring back the
	  main menu bar, if it has been hidden.
	</para>
	<para>
	  While holding down the CTRL key, the right mouse button can
	  be used to display this menu.
	</para>
      <sect2 id="url-highlight">
        <title>Launching URL's</title>
        <para>
          Gnome terminal can be used to select URL's from the text
          display, simply by moving the mouse over the URL text.  The
          URL will be highlighted, by being redrawn with an underline,
          and the mouse pointer will change to a pointing hand.
        </para> 
        <para>
          Invoking the <link linkend="menu-popup">control-menu</link>
          while over a highlighted URL will add a new option to load
          that url into a browser.
	</para>
	<para>
	  Pressing the left mouse button, while holding down the CTRL
	  key is a shortcut to launch the url immediately.
        </para>
      <sect2 id="pointer-dnd">
	<title>Drag and Drop</title>
	<para>
	  Drag and drop can be used for a number of operations within
	  the terminal.
	</para>
	<variablelist>
	  <varlistentry>
	    <term>Dragging files</term>
	    <listitem>
	      <para>If files are dragged into the terminal, then their
		full filename is pasted into the window.  URL's can also
		be dropped in this way.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Dragging colours</term>
	    <listitem>
	      <para>
		A colour can be dragged from another gnome
		application, or from the
		<link linkend="menu-settings">colour selector</link> into the
		display.  If they land on a character, it sets the
		foreground colour, otherwise it sets the background
		colour.  Refer to the
		<link linkend="config-colour">colour configuration</link> section.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>
   </sect1>
    
    <sect1 id="menus">
      <title>Menus</title>
      <para>
	Gnome-terminal provides a number of control features via the
	main menu, and a pop-up menu available by pressing the right
	mouse button while holding the CTRL key. (It is sometimes not
        necessary to hold down the CTRL key to get the pop-up menu, but 
        do not assume this is always so.)
      </para>
      <sect2 id="menu-file">
	<title>File menu</title>
	<variablelist>
	  <varlistentry>
	    <term>New terminal</term>
	    <listitem>
	      <para>
		Create a new terminal.  This is an efficient way to
		create multiple terminals, as they are all processed
		by the same program and PID.  Each starts its own sub-shell
		process however.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Hide menubar</term>
	    <listitem>
	      <para>
		Hides the main menu bar on the terminal, creating a
		neater, smaller terminal.  The menu bar can be
		retrieved using the control menu, which can be
		displayed by holding down the CTRL key, and pressing
		the right mouse button.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Close terminal</term>
	    <listitem>
	      <para>
		Closes the current terminal. It also closes any other 
                terminals opened via the command line in that terminal.
                If this is the last terminal to be closed, then the 
                gnome-terminal program exits. 
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>

      <sect2 id="menu-edit">
	<title>Edit menu</title>
	<variablelist>
	  <varlistentry>
	    <term>Paste</term>
	    <listitem>
	      <para>
		Pastes the current selection or clipboard into the
		terminal.  This can also be achieved using the middle
		mouse button.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>

      <sect2 id="menu-settings">
	<title>Settings menu</title>
	<variablelist>
	  <varlistentry>
	    <term>Preferences ...</term>
	    <listitem>
	      <para>
		Displays the preferences dialogue.  The settings
		which can be controlled from this dialogue are
		described in the <link linkend="config">config
		section</link>.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Reset Terminal</term>
	    <listitem>
	      <para>
		Resets the terminal parameters.  This will not clear
		the screen or move the cursor, but any subsequent
		terminal output will be reset to the default font and
		attributes.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Reset and Clear</term>
	    <listitem>
	      <para>
		Resets the terminal parameters, also clearing the
		screen.  All character fonts and attributes are reset.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Colour selector ...</term>
	    <listitem>
	      <para>
		Can be used to drag-and-drop colours into the
		terminal.  Refer to the <link
		linkend="config-colour">colour selector</link> description.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>

      <sect2 id="menu-help">
	<title>Help menu</title>
	<variablelist>
	  <varlistentry>
	    <term>GNOME terminal users guide ...</term>
	    <listitem>
	      <para>
		How to get to this document from within gnome-terminal.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>About ...</term>
	    <listitem>
	      <para>
		A little bit of kudos for all of the very hard working
		guys who made it all possible.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>

      <sect2 id="menu-popup">
	<title>Pop-up menu</title>
	<para>
	  The pop-up control menu can be shown by pressing the right
	  mouse button with the CTRL key depressed.  It is provided as
	  a simple short-cut to the main menu, or for when the main
	  menu is hidden.  The following items are available:
	</para>
	<variablelist>
	  <varlistentry>
	    <term>New terminal ...</term>
	    <listitem>
	      <para>
		Creates a new terminal window.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Preferences ...</term>
	    <listitem>
	      <para>
		Displays the preferences dialogue.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Hide/Show menubar</term>
	    <listitem>
	      <para>
		Either hide or show the main menu bar, depending on
		its current state.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Reset terminal</term>
	    <listitem>
	      <para>
		Resets the terminal attributes without clearing the
		screen.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Reset and Clear</term>
	    <listitem>
	      <para>
		Resets the terminal attributes and clears the
		screen.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Open in browser</term>
	    <listitem>
	      <para>
	        If the mouse pointer was over a URL when the popup
		menu is invoked, then this option is available to
		launch a browser to view the URL.  Using
		CTRL-left mouse button is a shortcut for this menu item.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>

    </sect1>
    
    <sect1 id="environment">
      <title>Environment</title>
      <para>
	The following variables are set by gnome-terminal: 
	<itemizedlist>
	  <listitem>
	    <para><symbol>TERM</symbol></para>

	    <para>
	      This variable is set to "xterm" by default.  Some curses
	      implementations and applications based on curses might want
	      the value to be xterm-color, color-xterm or xterm-debian to
	      support colour.  You might need to change this setting if
	      your application does not display in colour to one of those
	      values.  This can now be set via the
	      --termname <link linkend="Options">command
	      line option</link>.
	    </para>
	  </listitem>

	  <listitem>
	    <para><symbol>COLORTERM</symbol></para>

	    <para>
	      This variable is set to "gnome-terminal".
	      Various applications (especially the
	      Slang-based applications) use this setting to determine 
	      whether the terminal supports colour.
	    </para>
	  </listitem>

	  <listitem>
	    <para><symbol>WINDOWID</symbol></para>

	    <para>
	      This variable contains the X11 Window identifier.
	      This is used sometimes by applications to modify the
	      contents of this window or provide special effects.
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
    </sect1>
    
    <sect1 id="Authors">
      <title>Authors</title>

      <para>
	A large number of people work together to bring you the
	gnome-terminal:</para>

      <para>
	Michael Zucchi coded the Zvt widget engine; Miguel de Icaza
	and Jay Painter improved it and did further debugging and
	maintenance.   George Lebl added transparency and backing
	pixmap support to the widget.  Michael Zucchi later
	significantly improved the transparency and pixmap support,
	adding smoother/faster display and an optional scrolling mode.
	</para>

      <para>
	Miguel did the main gnome terminal program, and Erik Troan
	provided the terminal class support along with various other
	features.  Jeff Garzik, Jay, Christopher Blizzard, Michael,
	Jens Lautenbacher, Tom Tromey, Tristan Tarrant, Jonathan
	Blandford and Michael Zucchi provided extra bug fixes and
	minor enhancements.  Nat Friedman review the user interface to
	conform to the GNOME guidelines.  Felix Bellaby, Tom Tromey
	and Manish Vachharajani implemented and improved the session
	management code.
      </para>
    </sect1>
    
  </chapter>
  
</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
